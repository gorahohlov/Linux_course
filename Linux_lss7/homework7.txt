1.
# Для установки nginx используем официальную документацию с сайта nginx.org

# Устанавливаем пакеты, необходимые для подключения apt-репозитория:
# утилита curl - которую будем использовать для загрузки файлов из интернета
sudo apt install curl gnupg2 ca-certificates lsb-release
# подключаем apt-репозиторий для стабильной версии nginx
sudo vim /etc/apt/sources.list.d/nginx.list
deb http://nginx.org/packages/ubuntu 'lsb release -cs' nginx
# или
# echo "deb http://nginx.org/packages/ubuntu 'lsb release -cs' nginx" \
# | sudo tee /etc/apt/sources.list.d/nginx.list

# для проверки подлиннсоти пакетов скачиваем официальный ключ, используемый утилитой apt
curl -o /tmp/nginx_signing.key https://nginx.org/keys/nginx_signing.key
# проверяем, верный ли ключ был загружен
gpg --dry-run --quiet --import --import-options import-show /tmp/nginx_signing.key
# все в порядке. Полный отпечаток ключа совпадает.

# Перемещаем ключ в каталог доверенных ключей apt
sudo mv /tmp/nginx_signing.key /etc/apt/trusted.gpg.d/nginx_signing.asc
# далее обновляем информацию о репозиториях в каталоге /etc/apt/sources.list.d/
sudo apt update
# устанавливаем пакет
sudo apt install nginx

# Пакет установлен успешно!

# удаление пакета
sudo dpkg -r nginx
sudo apt purge nginx
# Package 'nginx' is not installed, so not removed.
sudo apt autoremove nginx -y

2.
snap search emacsy
sudo snap install --classic emacs
snap list
# emacs version 27.2 installed
sudo snap remove emacs
# emacs removed

3.
# в дополнение к правилам рассмотренным на уроке:
# Действия по умолчанию
iptables -P INPUT DROP
iptables -P OUTPUT DROP
iptables -P FORWARD DROP

# Разрешаем обмен по локальной петле
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

# Разрешаем пакеты icmp (для обмена служебной информацией)
iptables -A INPUT -p icmp -j ACCEPT
iptables -A OUTPUT -p icmp -j ACCEPT

# Разрешаем соединения с динамических портов
iptables -A OUTPUT -p TCP -m tcp --sport 32768:61000 -j ACCEPT
iptables -A OUTPUT -p UDP -m udp --sport 32768:61000 -j ACCEPT

# Разрешить только те пакеты, которые мы запросили
iptables -A INPUT -p TCP -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -p UDP -m state --state ESTABLISHED,RELATED -j ACCEPT

# Но если работаем как сервер SSH, следует разрешить и нужные порты
iptables -A INPUT -p tcp -m tcp --dport 22 -j ACCEPT 
iptables -A OUTPUT -p tcp -m tcp --sport 22 -j ACCEPT

# ---------
# запрещаем все входящие соединения и делаем исключения для портов 22 и 80
# sudo iptables -P INPUT DROP
sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT
sudo iptables -A INPUT -p tcp --dport 80 -j ACCEPT
sudo iptables -A OUTPUT -p tcp --sport 22 -j ACCEPT
sudo iptables -A OUTPUT -p tcp --sport 80 -j ACCEPT

4.
sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080
# по-сути как приведено в примерах в методичку к уроку 7.